// Add some whitespace between top bar and content
.top-bar-container, .tab-bar {
    .row.body-wrap {
        margin-top:rem-calc(10);
        padding-top:rem-calc(10);
        border-bottom:none;
        border-top:rem-calc(1) solid $iron;
        padding-bottom:rem-calc(10);
    }
}

.left-small {
    border-right: 0;
}

.right-small {
    border-left: 0;
}

.top-bar, .tab-bar {
    h1 {
        a {
            font-weight: $font-weight-bold;
            color: $body-font-color;
        }
    }
}

.top-bar {
    border-bottom:rem-calc(3) solid $brand-color;
    height:rem-calc(60);
    .has-form {
        & > .button {
            top: $topbar-button-top;
            font-weight: $font-weight-semi-bold;
        }
    }
}
.top-bar.bottom {
    border-bottom:none;
    li:not(.has-form) a:not(.button){
        line-height:2.5;
    }
    .top-bar-section {
        ul {
            li {
                background:none;
            }
        }
        ul li > a {
            font-weight:400;
        }
    }
}
.top-bar.bottom li:not(.has-form) a:not(.button):hover {
    background:none;
    text-decoration:underline;
}

// Switch between the mobile menu (tab-bar) and desktop menu (topbar) based on a custom $topbar-breakpoint value.
// The $topbar-breakpoint can be edited in _custom-settings.scss.

@media only screen and (min-width: $topbar-breakpoint + em-calc(1)) {
    .tab-bar {
        display: none;
    }
}

// Hide the topbar when the screen size is smaller than the topbar breakpoint
@media only screen and (max-width: $topbar-breakpoint) {
    .top-bar {
        display: none;
    }
}

/*top bar styles*/
.contain-to-grid {
    background: $topbar-color;
}
nav.tab-bar {
    margin-bottom: 0;
}

.top-bar {
    background: $topbar-color;
}

.top-bar-section li:not(.has-form) a:not(.button):hover {
    background: none;
    color: $body-font-color;
    text-decoration: underline;
}

.top-bar-section {

    ul li > a {
        color: $body-font-color;
    }

    li:not(.has-form) a:not(.button) {
        background: $topbar-color;
    }

    .mcafee {
        a {
            display: block;
        }

        img {
            max-height: rem-calc(31);
        }
    }
}

.top-bar-section ul li:hover:not(.has-form) > a {
    background: none;
    color: $body-font-color;
    text-decoration: none;

    &:hover {
        text-decoration: none;
    }
}

.top-bar-section .dropdown li:not(.has-form):not(.active) > a:not(.button) {
    background: $topbar-color;
    color: $body-font-color;
}

.top-bar-section .dropdown li:not(.has-form):not(.active):hover > a:not(.button) {
    background: $topbar-color;
    color: $body-font-color;
}

.top-bar-section .has-form {
    background: none;
}

@mixin nav($nav-format) {
    @if $nav-format == "dropdown" {
        .top-bar-container {
            background: $topbar-color;
            border-bottom: 2px solid $topbar-border;
        }
    }
    @else if $nav-format == "normal" {
        .contain-to-grid {
            border-bottom: 2px solid $topbar-border;
        }
    }
}

.inner-wrap {
    @include nav($nav-format);
}
